"""Change ID to an auto-incrementing integer

Revision ID: e771287cd747
Revises: 5406f5013656
Create Date: 2019-10-16 11:38:11.349435

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence

# revision identifiers, used by Alembic.
revision = 'e771287cd747'
down_revision = '5406f5013656'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('ALTER TABLE tags DROP CONSTRAINT tags_pkey CASCADE')
    op.drop_column('tags', 'id')
    op.execute(CreateSequence(Sequence('tags_id_seq')))
    op.add_column('tags', sa.Column('id', sa.String(), nullable=False, server_default=sa.text("nextval('tags_id_seq'::regclass)") ))
    op.create_primary_key('tags_pkey', 'tags', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # This is only to be used for an emergency downgrade:
    op.drop_table('tags')
    op.execute(DropSequence(Sequence('tags_id_seq')))
    op.create_table('tags',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('value', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('tags', sa.Column('created_at', sa.DateTime(),
                                    server_default=sa.text('now()'), nullable=True))
    op.add_column('tags', sa.Column('updated_at', sa.DateTime(),
                                    server_default=sa.text('now()'), nullable=True))
    op.add_column('tags', sa.Column('account_id', sa.String(), nullable=True))
    op.add_column('tags', sa.Column('namespace', sa.String(), nullable=True))

    # We should generally use a more elegant downgrade...
    # op.execute('ALTER TABLE tags DROP CONSTRAINT tags_pkey CASCADE')
    # op.drop_column('tags', 'id')
    # op.execute(DropSequence(Sequence('tags_id_seq')))
    # op.add_column('tags', sa.Column('id', sa.String()))
    # op.create_primary_key('tags_pkey','tags', ['id'])
    # ### end Alembic commands ###
